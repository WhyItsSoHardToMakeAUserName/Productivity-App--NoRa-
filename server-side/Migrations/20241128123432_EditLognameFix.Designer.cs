// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using server_side.Context;

#nullable disable

namespace server_side.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241128123432_EditLognameFix")]
    partial class EditLognameFix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("server_side.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("HexColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("server_side.Models.EditLog", b =>
                {
                    b.Property<int>("FinanceRecordId")
                        .HasColumnType("integer");

                    b.Property<string>("Log")
                        .HasColumnType("text");

                    b.HasKey("FinanceRecordId");

                    b.ToTable("EditLogs");
                });

            modelBuilder.Entity("server_side.Models.FinanceRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsProfit")
                        .HasColumnType("boolean");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("FinanceRecords");
                });

            modelBuilder.Entity("server_side.Models.FinanceTrackerData", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<float>("BackgroundOpacity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0.4f);

                    b.Property<float>("BorderOpacity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0.8f);

                    b.HasKey("UserId");

                    b.ToTable("FinanceTrackerData");
                });

            modelBuilder.Entity("server_side.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("server_side.Models.EditLog", b =>
                {
                    b.HasOne("server_side.Models.FinanceRecord", "financeRecord")
                        .WithMany("EditLogs")
                        .HasForeignKey("FinanceRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("financeRecord");
                });

            modelBuilder.Entity("server_side.Models.FinanceRecord", b =>
                {
                    b.HasOne("server_side.Models.Category", "Category")
                        .WithMany("FinanceRecords")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server_side.Models.FinanceTrackerData", "FinanceTrackerData")
                        .WithMany("FinanceRecords")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("FinanceTrackerData");
                });

            modelBuilder.Entity("server_side.Models.FinanceTrackerData", b =>
                {
                    b.HasOne("server_side.Models.User", "User")
                        .WithOne("FinanceTrackerData")
                        .HasForeignKey("server_side.Models.FinanceTrackerData", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("server_side.Models.Category", b =>
                {
                    b.Navigation("FinanceRecords");
                });

            modelBuilder.Entity("server_side.Models.FinanceRecord", b =>
                {
                    b.Navigation("EditLogs");
                });

            modelBuilder.Entity("server_side.Models.FinanceTrackerData", b =>
                {
                    b.Navigation("FinanceRecords");
                });

            modelBuilder.Entity("server_side.Models.User", b =>
                {
                    b.Navigation("FinanceTrackerData")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
